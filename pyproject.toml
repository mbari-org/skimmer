[project]
name = "skimmer"
version = "0.1.0"
description = "ROI cropping service"
readme = "README.md"
authors = [
    { name = "Kevin Barnard", email = "kbarnard@mbari.org" }
]
requires-python = ">=3.12"
dependencies = [
    "beholder-client>=0.2.1",
    "cachetools>=5.5.1",
    "diskcache>=5.6.3",
    "flask>=3.1.0",
    "gunicorn>=23.0.0",
    "pillow>=11.1.0",
    "psutil>=7.0.0",
    "pytest-mock>=3.14.0",
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
]

[project.scripts]
skimmer = "skimmer:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
]

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_toml = [
    "pyproject.toml:project.version",
]
version_variables = [
    "src/skimmer/constants.py:APP_VERSION",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true